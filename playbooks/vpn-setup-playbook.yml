- name: Initial VPN Setup
  hosts: vpn
  become: true

  vars:
    - server_public_key: RHkxpBn9Y1ucu9iHYxmbFskXy+hBpgU3MUx4STJbLi0=
    - UniqVar: a
    - peers:
        - pubkey: PK5G4cnqG1683oGNrFyHa8UmuomG/ybzurQKdcGDUAU=
          priv_ip: 192.168.5.2

  tasks:
    - name: Ensure Wireguard and necessary tools are installed
      ansible.builtin.dnf:
        name:
          - wireguard-tools
          - nftables
          - pip
          - firewalld
        state: present

    - name: Install firewall module
      ansible.builtin.pip:
        name:
          - firewall
        state: present
    
    - name: Create Wireguard user
      ansible.builtin.user:
        name: wireguard-adm

    - name: Create key storage
      ansible.builtin.file:
        path: /etc/wireguard/keys
        state: directory
        owner: wireguard-adm
        mode: "077"

    - name: Create wireguard scripts storage
      ansible.builtin.file:
        path: /etc/wireguard/scripts
        state: directory

    - name: Copy Post-Up script ( Oracle Cloud Specific )
      ansible.builtin.copy:
        src: "./scripts/post-up.sh"
        dest: /etc/wireguard/scripts/post-up.sh
        owner: wireguard-adm
        mode: +x
      
    - name: Copy Post-Down script ( Oracle Cloud Specific )
      ansible.builtin.copy:
        src: "./scripts/post-down.sh"
        dest: /etc/wireguard/scripts/post-down.sh
        owner: wireguard-adm
        mode: +x

    - name: Add public key
      ansible.builtin.lineinfile:
        path: /etc/wireguard/keys/publickey
        state: present
        owner: wireguard-adm
        create: true
        line: "{{ server_public_key }}"

    - name: Add private key
      ansible.builtin.copy:
        dest: /etc/wireguard/keys/privatekey
        src: "./secrets/wg_privatekey"
        owner: wireguard-adm
        

    - name: Create interface file
      ansible.builtin.file:
        owner: wireguard-adm
        path: /etc/wireguard/wg0.conf
        state: touch
    
    - name: Get private key
      ansible.builtin.command:
        cmd: cat /etc/wireguard/keys/privatekey
      
      register: wg_priv_key

    - name: Get default network interface
      ansible.builtin.shell:
        cmd: ip route | grep default | tail -n 1 | awk '{print $5}'
      register: net_interface

    - name: Add interface configuration ( Specific to Oracle Cloud )
      ansible.builtin.blockinfile:
        path: /etc/wireguard/wg0.conf
        block: |
          [Interface]
          PrivateKey = {{ wg_priv_key.stdout }}
          Address = 192.168.5.1/24
          ListenPort = 51820

    - name: Add peers
      ansible.builtin.blockinfile:
        prepend_newline: true
        path: /etc/wireguard/wg0.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.priv_ip }}"
        block: |
          [Peer]
          PublicKey = {{ item.pubkey }}
          AllowedIPs = {{ item.priv_ip }}/32
          PersistentKeepalive = 25
      loop: "{{ peers }}"

    - name: Enable IP Forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        state: present
        value: true
        reload: true

    - name: Add wireguard port to external zone
      ansible.posix.firewalld:
        port: 51820/udp
        state: enabled
        zone: external
        immediate: true
        offline:  true
        permanent: true
    
    

    - name: Add default interface to external zone
      ansible.posix.firewalld:
        interface: "{{ net_interface.stdout }}"
        state: enabled
        zone: external
        immediate: true
        permanent: true

    - name: Remove default interface from public zone
      ansible.posix.firewalld:
        interface: "{{ net_interface.stdout }}"
        state: disabled
        zone: public
        immediate: true
        permanent: true

    - name: Add wireguard interface to internal zone
      ansible.posix.firewalld:
        interface: wg0
        state: enabled
        zone: internal
        immediate: true
        permanent: true
    
    - name: Enable masquerading on network
      ansible.builtin.firewalld:
        rich_rule: rule family="ipv4" source address="10.0.0.0/24" masquerade
        zone: external
        state: enabled
        permanent: true
        immediate: true

    - name: Add sources to external zone
      ansible.builtin.firewalld:
        zone: external
        source: "{{ item.priv_ip }}"
        state: enabled
        permanent: true
        immediate: true

      loop: "{{ peers }}"

    - name: Set external as default zone
      ansible.builtin.command:
        firewall-cmd --set-default-zone=external
      become: true

    - name: Enable wireguard
      ansible.builtin.systemd:
        service: wg-quick@wg0.service
        enabled: true
        state: started
        